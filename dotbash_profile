#!/bin/bash
#
# Alexs .bash_profile
# Loaded by bash when any non-login shell started
#
# Normal environment variable tweaks should be hidden away in
# the .bashrc (assuming they don't mess with ssh/tramp stuff)
#

set +x
#
# Source global definitions
#

#echo "Starting ajb's .bashrc $*"
#set -x

#For debuging when we are interactive or non-interactive (tty)
#
#ENVLOG=~/tmp/env`date +%s`.log
#env > $ENVLOG
#echo "ARGS=$*" >> $ENVLOG
#PID=$$
#echo "PID=$PID"  >> $ENVLOG
#cat /proc/$PID/cmdline >> $ENVLOG
#echo "pstree" >> $ENVLOG
#pstree -p >> $ENVLOG

if [ -f /etc/bashrc ]; then
    source /etc/bashrc
fi

if [ -f /etc/bash.bashrc ]; then
    source /etc/bash.bashrc
fi

#
# Calculate the root directory of this script
#
THIS_SCRIPT="${BASH_SOURCE[0]}"
while [ -h "$THIS_SCRIPT" ]; do
    DIR="$( cd -P "$( dirname "$THIS_SCRIPT" )" && pwd )"
    THIS_SCRIPT="$(readlink "$THIS_SCRIPT")"
    [[ $THIS_SCRIPT != /* ]] && THIS_SCRIPT="$DIR/$THIS_SCRIPT"
done
DOTFILES_DIR=$( cd -P "$( dirname "$THIS_SCRIPT" )" && pwd)

if [ -f $DOTFILES_DIR/dotbashrc ]; then
    source $DOTFILES_DIR/dotbashrc
fi

#############
# Aliases
#############

# Search through a list of alternative binaries, returning the first match
function find_alternatives ()
{
    for arg in "$@"
    do
      # --skip-alias only works with GNU which
      # file=`which --skip-alias $arg 2> /dev/null`
      file=`which $arg 2> /dev/null`
      if [ -x "$file" ]; then
	  echo "$file"
	  return
      fi
    done
    echo "/alternative/not/found"
}

# Search though a list of directories, returning first match
function find_directories ()
{
    for d in "$@"
    do
      if [ -d "$d" ]; then
	  echo "$d"
	  return
      fi
    done
    echo "/alternative/not/found"
}

# Search though a list of files, returning first match
function find_alt_file ()
{
    for f in "$@"
    do
      if [ -f "$f" ]; then
	  echo "$f"
	  return
      fi
    done
    echo "/alternative/not/found"
}

#
# Lets see if we have a decent "grep"
#
GREP=$(find_alternatives "ag" "ack-grep" "ggrep" "grep" "/bin/grep")
alias grep="$GREP"

#
# Look for a decent diff
#
DIFF=$(find_alternatives "gdiff" "diff")
alias diff="$DIFF"


# Find a decent browser
BROWSER=$(find_alternatives "chromium-browser" "google-chrome" "chrome" "firefox-4.0" "firefox" "mozilla")

######################
# Environent Variables
######################

# One editor
export EDITOR=emacs

# set CFLAGS for debugging - autoconf usually picks it up.
#export CFLAGS=-g3

# CVS exports
export CVS_RSH=ssh
export CVSEDITOR=ec


# GNU systems usually use less by default for
# man pages, however not all unix-a-likes do
export PAGER=less


#
# surfraw, command line browser control
# http://surfraw.alioth.debian.org/
#
SURFRAW=$(find_alternatives "surfraw")
if [[ -f $SURFRAW ]]; then
    alias wiki="$SURFRAW wikipedia "
    alias google="$SURFRAW google "
    alias imdb="$SURFRAW imdb "
    alias code="$SURFRAW codesearch"
    alias jspcode="$SURFRAW codesearch lang:jsp"
    alias javacode="$SURFRAW codesearch lang:java"
    alias pycode="$SURFRAW codesearch lang:python"
fi

########################
# Miscelaneous Stuff
########################
# I want core-dumps dammit
ulimit -S -c unlimited


# Helper function to load extra bits of profile that
# are optional depending on the environment.
LOADED_MODULES=""
function load_extra_module()
{
    module=$1
    shift

    find_exes=$(find_alternatives $*)
    module_path=${DOTFILES_DIR}/dotbash_${module}
    if [[ -f $find_exes && -f $module_path ]]; then
        source $module_path
        LOADED_MODULES="$LOADED_MODULES $module"
    fi
}

# If invoked as /bin/sh let's assume a minimal environment
if [ "$SHELL" == "/bin/sh" ]; then
    echo "Executing $SHELL under minmal environment"
else
    # Always loaded
    load_extra_module ps1 true
    load_extra_module path true
    load_extra_module find true
    load_extra_module hist true
    # Depends on tools
    load_extra_module tmux tmux
    load_extra_module emacs emacs
    load_extra_module git git
    load_extra_module apt apt-get
    load_extra_module keys ssh-agent gpg-agent keychain
    load_extra_module valgrind valgrind
    load_extra_module ccache ccache

    # Gentoo is special...
    if [[ `whoami` != "root" ]]; then
        load_extra_module gentoo emerge
    else
        unset CFLAGS
    fi

    load_extra_module `hostname` true

    load_extra_module local true
    echo "Loaded$LOADED_MODULES"
fi

clean_path

# Alias for reloading
alias .profile=". ~/.bash_profile"

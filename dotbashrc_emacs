#!/bin/bash
#
# Alex's .bashrc_emacs
#
# Emacs Specific setup
#
# There is only one editor (although I can get to it in different ways).
# For most stuff I want to use emacsclient to spawn a quick shell and
# for emacs 23 I want to ensure the daemon is always running for the user.
#
# Luckily this is covered by specifying -a '' which will spawn a daemon if
# one is not running
#

if [[ "$DISPLAY" == "" ]]; then
    # Can we use muti-tty?
    emacsclient --help | grep "\-\-tty" > /dev/null
    if [[ "$?" == "0" ]]; then
        # Thats a yes
	EMACS_CMD="emacsclient"
	EMACS_ARGS="-a '' -t"
    else
        # Hmmm, opening in another pane would be a pain?
        EMACS_CMD="emacs"
	EMACS_ARGS="-nw"
    fi
else
    # otherwise don't wait and open a new frame
    EMACS_CMD="emacsclient"
    EMACS_ARG="-n -a '' -c"
fi

# Set the environment variables for the editors
export EDITOR="${EMACS_CMD} ${EMACS_ARGS} "
export VISUAL="${EMACS_CMD} ${EMACS_ARGS} "
export ALTERNATE_EDITOR=emacs

# shortcut
alias ec="${EDITOR}"
alias ect="emacsclient -a '' -t"

# And finally lets get the status of the emacs server
DT=`emacsclient -a '' -e "(server-running-p)" 2> /dev/null`

#
# If I've been using a screen session while physically next to
# the box I'll have an EDITOR etc set up for new X frames. However
# if I then login remotely I'll be wanting to spawn --tty frames
# for new cases.
#
function switch_emacs_to_terminal()
{
    if [ "${EMACS_CMD}" == "emacsclient" ]; then
	export EDITOR="${EMACS_CMD} -a '' -t "
	export VISUAL="${EMACS_CMD} -a '' -t "
	export ALTERNATE_EDITOR="emacs -nw"

	echo "Emacs clients now in terminal mode"
    fi
}

echo "loading .bashrc_emacs (Using: $EMACS_CMD and server-running-p=${DT})"


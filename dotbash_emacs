#!/bin/bash
#
# Alex's .bashrc_emacs
#
# Emacs Specific setup
#
# There is only one editor (although I can get to it in different ways).
# For most stuff I want to use emacsclient to spawn a quick shell and
# for emacs 23 I want to ensure the daemon is always running for the user.
#
# Luckily this is covered by specifying -a '' which will spawn a daemon if
# one is not running
#

# I don't want to bring up daemons on every machine

EMACS_DAEMON=0
machine=`hostname`
for emacs_daemon_machine in sloy pitcairn socrates danny trent vnms
do
    if [[ "$machine" == "$emacs_daemon_machine" ]]; then
	EMACS_DAEMON=1
    fi
done

if [[ "${EMACS_DAEMON}" -gt 0 ]]; then
    if [[ "$DISPLAY" == "" ]]; then
    # Can we use muti-tty?
	emacsclient --help 2>&1 | grep "\-\-tty" > /dev/null
	if [[ "$?" == "0" ]]; then
        # Thats a yes
	    EMACS_CMD="emacsclient"
	    EMACS_ARGS="-a '' -t"
	else
        # Hmmm, opening in another pane would be a pain?
            EMACS_CMD="emacs"
	    EMACS_ARGS="-nw"
	fi
    else
    # otherwise open a new frame
	EMACS_CMD="emacsclient"
	EMACS_ARGS="-a '' -c"
    # No wait only makes sense for interactive, GUI frame sessions
	EMACS_NW="-n"
    fi
    alias ect="emacsclient -a '' -t"
else
    EMACS_CMD="emacs"
    EMACS_ARGS="-nw"
fi

# Set the environment variables for the editors, remember that programs like
# git or crontab -e will get confused if they don't wait for the editor to return.
export EDITOR="${EMACS_CMD} ${EMACS_ARGS} "
export VISUAL="${EMACS_CMD} ${EMACS_ARGS} "
export ALTERNATE_EDITOR=emacs

# shortcut
alias ec="${EMACS_CMD} ${EMACS_NW} ${EMACS_ARGS}"

# And finally lets get the status of the emacs server, this is a little racy
# but better than it was before...
if [[ "${EMACS_DAEMON}" -gt 0 ]]; then
    EMACS_PROCS=`ps -u $USER -o time,command | grep "emacs"`
    RUNNING=`echo $EMACS_PROCS | wc -l`
    if [ "$RUNNING" == "0" ]; then
	DT=`emacsclient -a '' -e "(server-running-p)" 2> /dev/null`
    else
    # Check if emacs --daemon has already been invoked...
	DAEMON=`echo $EMACS_PROCS | grep -c "\-\-daemon"`
	if [ "$DAEMON" == "0" ]; then
	    DT=`emacsclient -a '' -e "(server-running-p)" 2> /dev/null`
	else
	# Otherwise don't spawn a new one if you can't connect
	    DT=`emacsclient -a '/bin/false' -e "(server-running-p)" 2> /dev/null`
	fi
    fi
    REPORT="server-running-p=${DT}"
else
    REPORT="not spawned a daemon"
fi

#
# If I've been using a screen session while physically next to
# the box I'll have an EDITOR etc set up for new X frames. However
# if I then login remotely I'll be wanting to spawn --tty frames
# for new cases.
#
function switch_emacs_to_terminal()
{
    if [ "${EMACS_CMD}" == "emacsclient" ]; then
	export EDITOR="${EMACS_CMD} -a '' -t "
	export VISUAL="${EMACS_CMD} -a '' -t "
	export ALTERNATE_EDITOR="emacs -nw"

	echo "Emacs clients now in terminal mode"
    fi
}

echo "loading .bash_emacs (Using: $EMACS_CMD and $REPORT)"

